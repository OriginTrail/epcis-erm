@startuml

class Event {
    a                       gs1-epcis:Event 
    eventTime               xsd:dateTime
    recordTime              xsd:dateTime
    eventTimeZoneOffset     string
    eventID                 string
}

class ObjectEvent {
    a                       gs1-epcis:ObjectEvent
} 

class AggregationEvent {
    a                       gs1-epcis:AggregationEvent
} 

class TransactionEvent {
    a                       gs1-epcis:TransactionEvent
}

class TransformationEvent {
    a                       gs1-epcis:TransactionEvent
    transformationID        string
}

class Product {
    a   gs1:Epc
    https://www.gs1.org/voc/Epc
}

class Organization {
    a gs1:Organization
    https://www.gs1.org/voc/Organization
}

class Transaction {
    transactionType         TransactionType
}

class Place {
    a                       gs1:Place
    https://gs1.org/voc/Place
}

class BusinessStep {
    a skos:Concept
    skos:conceptScheme      <taxonomy/business_step>
    skos:prefLabel          string
    skos:description        string
    fsm:example             string
}

class Disposition {
    a skos:Concept
    skos:conceptScheme      <taxonomy/disposition>
    skos:prefLabel          string
    skos:description        string
    fsm:example             string
}

class ActionType {
    a skos:Concept
    skos:conceptScheme      <taxonomy/action_type>
    skos:prefLabel          string
    skos:description        string
    fsm:example             string
}

class Quantity {
    quantity                xsd:double
    uom                     string
}


Event -up-> ActionType : action
Event -up-> BusinessStep : businessStep
Event -up-> Disposition : disposition
Event -up-> Place : readPoint
Event -up-> Place : businessLocation
Event -up->  Organization : source                  
Event -up->  Organization : destination
Event -up->  Transaction : businessTransaction

ObjectEvent -->  Epc : epc

AggregationEvent -->  Epc : childEpc
AggregationEvent -->  Epc : parent
TransactionEvent -->  Quantity : childQuantity

TransactionEvent -->  Epc : epc
TransactionEvent -->  Epc : parent
TransactionEvent -->  Quantity : quantity

TransformationEvent -->  Epc : inputEpc
TransformationEvent -->  Epc : outputEpc
TransformationEvent -->  Epc : parent
TransformationEvent -->  Quantity : inputQuantity
TransformationEvent -->  Quantity : outputQuantity

Quantity --> Epc : epc

ObjectEvent -up-> Event : rdfs:subClassOf
AggregationEvent -up-> Event : rdfs:subClassOf
TransactionEvent -up-> Event : rdfs:subClassOf
TransformationEvent -up-> Event : rdfs:subClassOf

class Retailer {
    a           fsm:Retailer
}

class Producer {
    a           fsm:Producer
}

class Manufacturer {
    a           fsm:Manufacturer
}

class FoodProcessor {
    a           fsm:FoodProcessor
}

class CertificationBody {
    a           fsm:CertificationBody
}

class CertificationSchemaOwner {
    a           fsm:CertificationSchemaOwner
}

class Supplier {
    a           fsm:Supplier
}

class Incident {
    a           fsm:Incident
}

class Inspection {
    a           fsm:Inspection
}

class LabTest {
    a           fsm:LabTest
}

class Audit {
    a           fsm:Audit
}

class CertificateGrant {
    a           fsm:CertificateGrant
}

Producer --> Supplier : rdfs:subClassOf
Manufacturer --> Supplier : rdfs:subClassOf
FoodProcessor --> Supplier : rdfs:subClassOf
Supplier --> Organization : rdfs:subClassOf
Retailer --> Organization : rdfs:subClassOf
CertificationBody --> Organization : rdfs:subClassOf
CertificationSchemaOwner --> Organization : rdfs:subClassOf

Incident --> ObjectEvent : rdfs:subClassOf
Inspection --> ObjectEvent : rdfs:subClassOf
LabTest --> ObjectEvent : rdfs:subClassOf
Audit --> ObjectEvent : rdfs:subClassOf
CertificateGrant --> ObjectEvent : rdfs:subClassOf

Product -up-> Epc : rdfs:subClassOf
Result -up-> Epc : rdfs:subClassOf


@enduml
